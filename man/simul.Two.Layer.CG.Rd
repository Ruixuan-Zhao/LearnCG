% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simul_CGFinal.R
\name{simul.Two.Layer.CG}
\alias{simul.Two.Layer.CG}
\title{Function to generate random chain graph (Example 2)}
\usage{
simul.Two.Layer.CG(p.node, n.sample, p.upper, p.un, p.dir, CG.seed)
}
\arguments{
\item{p.node}{Number of nodes}

\item{n.sample}{Sample size}

\item{p.upper}{The probability of assigning the nodes to the upper layer}

\item{p.un}{The probability of connecting two nodes with undirected edge in two layers}

\item{p.dir}{The probability of directed edges pointing from the node in the upper layer to the node in the lower layer}

\item{CG.seed}{The random number for generating random chain graph}
}
\value{
A list including
\describe{
\item{Omega}{The precision matrix of noise}
\item{B}{The coefficient matrix corresponding to the directed edges}
\item{X}{The data matrix}
}
}
\description{
The function to generate random chain graph.
}
\details{
This random chain graph is also called two-layer Gaussian graphical model.
Particularly, we randomly assign all the nodes into two layers. Within each
layer, we randomly connect each pair of nodes by an undirected edge with a
certain probability. Then, we generate the directed edges from
nodes in one layer (upper layer) to nodes in another layer (lower layer) with a certain
probability.
}
\examples{
\donttest{
simul.Two.Layer.CG(p.node=20, n.sample=100, p.upper=0.4, p.un=0.05, p.dir=0.5, CG.seed=2)
}

}
